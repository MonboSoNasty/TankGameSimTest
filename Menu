--// Advanced Auto Skill Upgrade with GameSneeze Library GUI
-- By MonboSoNasty + ChatGPT
-- Integrated into Library GUI for tabs, toggles, sliders, keybinds, etc.

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SkillUpgrade = ReplicatedStorage:WaitForChild("Skills"):WaitForChild("Upgrade")

--// Skills to Upgrade
local skillList = {
    "Bullet Penetration",
    "Bullet Damage",
    "Bullet Speed",
    "Body Damage",
    "Health Regeneration",
    "Max Health",
    "Shield",
    "Reload"
}

--// Counters
local counters, running, fireAmounts = {}, {}, {}
for _, skill in ipairs(skillList) do
    counters[skill] = 0
    running[skill] = false
    fireAmounts[skill] = 1
end

--// Load the Library GUI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/matas3535/gamesneeze/main/Library.lua"))()

local Window = Library:New({
    Name = "Tank Game Simulator" -- Main window title
})

--// Pages (Tabs)
local SkillPage = Window:Page({Name = "Skill Upgrades"})
local PlayerPage = Window:Page({Name = "Players"})

--// Section for Skills
local SkillSection = SkillPage:Section({
    Name = "Skills Section",
    Fill = true,
    Side = "Left"
})

--// Add all skill controls
for _, skill in ipairs(skillList) do
    -- Label for Skill
    SkillSection:Label({
        Name = skill,
        Center = false
    })

    -- Fire Amount Input
    SkillSection:TextBox({
        Default = tostring(fireAmounts[skill]),
        Placeholder = "Fire Count",
        Max = 100,
        Reactive = true,
        Callback = function(value)
            local val = tonumber(value)
            if val and val > 0 then
                fireAmounts[skill] = val
            end
        end
    })

    -- Counter Label
    local CounterLabel = SkillSection:Label({
        Name = "Fired: " .. tostring(counters[skill]),
        Center = true
    })

    -- Toggle for Auto Fire
    SkillSection:Toggle({
        Name = "Enable " .. skill,
        callback = function(value)
            running[skill] = value
            if value then
                task.spawn(function()
                    for _ = 1, fireAmounts[skill] do
                        if not running[skill] then break end
                        SkillUpgrade:FireServer(skill)
                        counters[skill] += 1
                        CounterLabel:Set("Fired: " .. tostring(counters[skill]))
                        task.wait() -- small yield to prevent freezing
                    end
                    running[skill] = false
                    SkillSection:SetToggle("Enable " .. skill, false)
                end)
            end
        end
    })
end

--// Optional: Destroy GUI Button
SkillSection:Button({
    Name = "Destroy UI",
    callback = function()
        Window:Unload()
    end
})

--// Extras: Example Sliders, Keybinds, Colorpicker, etc.
SkillSection:Slider({
    Name = "Example Slider",
    Min = 1,
    Max = 100,
    Default = 10,
    callback = function(value)
        print("Slider Value:", value)
    end
})

SkillSection:Keybind({
    Name = "Example Keybind",
    Default = Enum.KeyCode.Q,
    KeybindName = "ExampleKey",
    Mode = "Toggle",
    Callback = function(input, state)
        print("Keybind:", input, "State:", state)
    end
})

SkillSection:Colorpicker({
    Name = "Example Colorpicker",
    Default = Color3.fromRGB(255,0,0),
    Transparency = 0.25,
    Info = "Pick a color",
    callback = function(color)
        print("Color:", color)
    end
})

--// Player List Page
local PlayerList = PlayerPage:PlayerList({})

--// Initialize the Window
Window:Initialize()

--[[ 
NOTES FOR LEARNING:
1. counters[skill] = tracks number of times a skill fired.
2. fireAmounts[skill] = how many times to fire when toggle is ON.
3. running[skill] = prevents multiple simultaneous fires.
4. SkillSection:TextBox() = allows changing fire amount for each skill.
5. SkillSection:Toggle() = starts/stops auto-firing for each skill.
6. Task.wait() = prevents script from freezing Roblox.
7. You can expand PlayerPage or add more tabs like TankChanger.
8. Window:Unload() = destroys the GUI safely.
--]]
