local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Localization = WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "en",
    Translations = {
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end

WindUI:Popup({
    Title = gradient("WindUI Demo", Color3.fromHex("#6A11CB"), Color3.fromHex("#2575FC")),
    Icon = "sparkles",
    Content = "loc:LIB_DESC",
    Buttons = {
        {
            Title = "Get Started",
            Icon = "arrow-right",
            Variant = "Primary",
            Callback = function() end
        }
    }
})

local Window = WindUI:CreateWindow({
    Title = "loc:WINDUI_EXAMPLE",
    Icon = "geist:window",
    Author = "loc:WELCOME",
    Folder = "WindUI_Example",
    Size = UDim2.fromOffset(580, 490),
    Theme = "Dark",
    HidePanelBackground = false,
    NewElements = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            WindUI:Notify({
                Title = "User Profile",
                Content = "User profile clicked!",
                Duration = 3
            })
        end
    },
    Acrylic = false,
    HideSearchBar = false,
    SideBarWidth = 200
})

Window.User:SetAnonymous(true)
Window:SetIconSize(48)
Window:Tag({ Title = "v1.6.4", Color = Color3.fromHex("#30ff6a") })
Window:Tag({ Title = "Beta", Color = Color3.fromHex("#315dff") })

local TimeTag = Window:Tag({
    Title = "--:--",
    Radius = 0,
    Color = WindUI:Gradient({
        ["0"] = { Color = Color3.fromHex("#FF0F7B"), Transparency = 0 },
        ["100"] = { Color = Color3.fromHex("#F89B29"), Transparency = 0 },
    }, { Rotation = 45 })
})

task.spawn(function()
	while true do
		local now = os.date("*t")
		TimeTag:SetTitle(string.format("%02d:%02d", now.hour, now.min))
		task.wait(0.06)
	end
end)

Window:CreateTopbarButton("theme-switcher", "moon", function()
    WindUI:SetTheme(WindUI:GetCurrentTheme() == "Dark" and "Light" or "Dark")
    WindUI:Notify({
        Title = "Theme Changed",
        Content = "Current theme: "..WindUI:GetCurrentTheme(),
        Duration = 2
    })
end, 990)

--// Sections
local Sections = {
    Main = Window:Section({ Title = "loc:FEATURES", Opened = true }),
    Settings = Window:Section({ Title = "loc:SETTINGS", Opened = true }),
    Utilities = Window:Section({ Title = "loc:UTILITIES", Opened = true })
}

--// Tabs
local Tabs = {
    Elements = Sections.Main:Tab({ Title = "Tank Changer", Icon = "layout-grid" }),
    AutoSkills = Sections.Main:Tab({ Title = "OP AutoSkills", Icon = "zap" }),
    Appearance = Sections.Settings:Tab({ Title = "loc:APPEARANCE", Icon = "brush" }),
    Config = Sections.Utilities:Tab({ Title = "loc:CONFIGURATION", Icon = "settings" })
}

---------------------------------------------------------------------
--// OP AutoSkills Tab
---------------------------------------------------------------------
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SkillUpgrade = ReplicatedStorage:WaitForChild("Skills"):WaitForChild("Upgrade")

local skillList = {
    "Bullet Penetration",
    "Bullet Damage",
    "Bullet Speed",
    "Body Damage",
    "Health Regeneration",
    "Max Health",
    "Shield",
    "Reload"
}

local running, fireAmounts = {}, {}
for _, skill in ipairs(skillList) do
    running[skill] = false
    fireAmounts[skill] = 1
end

Tabs.AutoSkills:Section({ Title = "⚙️ OP Auto Skill Control", TextSize = 20 })

for _, skill in ipairs(skillList) do
    Tabs.AutoSkills:Divider({ Title = "⠀" })
    
    local SkillToggle = Tabs.AutoSkills:Toggle({
        Title = skill,
        Desc = "Auto-upgrade " .. skill,
        Value = false,
        Callback = function(state)
            running[skill] = state
            if state then
                task.spawn(function()
                    for _ = 1, fireAmounts[skill] do
                        if not running[skill] then break end
                        SkillUpgrade:FireServer(skill)
                        task.wait()
                    end
                    running[skill] = false
                    SkillToggle:Set(false)
                    WindUI:Notify({
                        Title = "AutoSkills",
                        Content = skill .. " upgrades complete!",
                        Duration = 2
                    })
                end)
            end
        end
    })

    Tabs.AutoSkills:Input({
        Title = "Fire Count for " .. skill,
        Value = tostring(fireAmounts[skill]),
        Placeholder = "Enter amount (e.g. 5)",
        Callback = function(text)
            local val = tonumber(text)
            if val and val > 0 then
                fireAmounts[skill] = val
            else
                WindUI:Notify({
                    Title = "Invalid Input",
                    Content = "Please enter a number above 0.",
                    Duration = 2
                })
            end
        end
    })
end

---------------------------------------------------------------------
--// Tank Changer Tab
---------------------------------------------------------------------
local TankChangerSection = Tabs.Elements:Section({ Title = "Upgrade Your Tank", Icon = "tank" })

local tankName = "Crusher" -- default value
TankChangerSection:Input({
    Title = "Enter Tank Name",
    Placeholder = "e.g. Crusher",
    Value = tankName,
    Callback = function(text)
        if text ~= "" then
            tankName = text
        else
            WindUI:Notify({
                Title = "Invalid Input",
                Content = "Please enter a valid tank name.",
                Duration = 2
            })
        end
    end
})

TankChangerSection:Button({
    Title = "Upgrade Tank",
    Icon = "arrow-right",
    Callback = function()
        local args = { tankName, 1 }
        local success, err = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Evolutions"):WaitForChild("UpgradeTank"):FireServer(unpack(args))
        end)
        if success then
            WindUI:Notify({
                Title = "Tank Upgrade",
                Content = "Successfully upgraded " .. tankName,
                Duration = 2
            })
        else
            WindUI:Notify({
                Title = "Error",
                Content = "Failed to upgrade tank: " .. tostring(err),
                Duration = 3
            })
        end
    end
})
