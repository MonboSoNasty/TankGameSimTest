-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Rayfield Example Window",
	LoadingTitle = "Rayfield Interface Suite",
	LoadingSubtitle = "by Sirius",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "Rayfield Interface Suite",
		FileName = "Big Hub"
	},
	KeySystem = false
})

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SkillUpgrade = ReplicatedStorage:WaitForChild("Skills"):WaitForChild("Upgrade")

--// Skills to Upgrade
local skillList = {
	"Bullet Penetration",
	"Bullet Damage",
	"Bullet Speed",
	"Body Damage",
	"Health Regeneration",
	"Max Health",
	"Shield",
	"Reload"
}

--// Counters and state tables
local counters, running, fireAmounts = {}, {}, {}
for _, skill in ipairs(skillList) do
	counters[skill] = 0
	running[skill] = false
	fireAmounts[skill] = 1
end

--// Create a new tab in Rayfield for Auto Skills
local AutoSkillsTab = Window:CreateTab("Auto Skills", 4483362458)

--// For each skill, create a section with toggle + input + counter
for _, skill in ipairs(skillList) do
	-- Section header for the skill
	local Section = AutoSkillsTab:CreateSection(skill)

	-- Fire Amount Input
	local FireInput = AutoSkillsTab:CreateInput({
		Name = "Fire Amount",
		PlaceholderText = "1",
		RemoveTextAfterFocusLost = false,
		Callback = function(Text)
			local val = tonumber(Text)
			if val and val > 0 then
				fireAmounts[skill] = val
			else
				-- Reset to previous valid value
				AutoSkillsTab:CreateInput({Name = "Fire Amount", PlaceholderText = tostring(fireAmounts[skill])})
			end
		end
	})

	-- Counter Label (updates dynamically)
	local CounterLabel = AutoSkillsTab:CreateLabel("Fired: 0")

	-- Toggle Button
	local Toggle = AutoSkillsTab:CreateToggle({
		Name = "Auto Fire",
		CurrentValue = false,
		Flag = skill.."Toggle",
		Callback = function(Value)
			running[skill] = Value

			if Value then
				task.spawn(function()
					for _ = 1, fireAmounts[skill] do
						if not running[skill] then break end
						SkillUpgrade:FireServer(skill)
						counters[skill] += 1
						CounterLabel:Set("Fired: "..counters[skill])
						task.wait() -- yields to allow other processes
					end
					running[skill] = false
					Toggle:Set(false)
				end)
			end
		end
	})
end

-- Example: Destroy UI Button
AutoSkillsTab:CreateButton({
	Name = "Destroy UI",
	Callback = function()
		Rayfield:Destroy()
	end
})

-- Notes for you:
-- 1. To add more skills, just append them to the `skillList` table.
-- 2. FireAmounts are set per skill using the input boxes.
-- 3. Counters automatically track how many times each skill has fired.
-- 4. Toggles control the auto firing, and they respect the fire amount.
-- 5. All GUI is now inside Rayfield, no separate draggable UI needed.

